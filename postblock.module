<?php
// $Id$

function postblock_theme() {
  return array(
    'postblock' => array(
      'arguments' => array('type_info' => array()),
      'template' => 'postblock',
    ),
  );
}

function postblock_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks['post'] = array(
      'info' => t('Post content'),
      'weight' => -1,
      'status' => 1,
      'region' => 'right',
      'cache' => BLOCK_CACHE_PER_ROLE,
    );
    return $blocks;
  }
  else if ($op == 'configure' && $delta == 'post') {
    $form['postblock_destination'] = array(
      '#type' => 'select',
      '#title' => t('After posting content, go to'),
      '#default_value' => variable_get('postblock_destination', 'node'),
      '#options' => array(
        'node' => t('The node that was created'),
        'destination' => t('The page the user started on'),
        'frontpage' => t('The front page'),
      ),
    );

    $form['postblock_hidden_types'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Hide the following content types'),
      '#default_value' => variable_get('postblock_hidden_types', array()),
      '#options' => node_get_types('names'),
    );
    return $form;
  }
  else if ($op == 'save' && $delta == 0) {
    variable_set('postblock_hidden_types', $edit['postblock_hidden_types']);
    variable_set('postblock_destination', $edit['postblock_destination']);
  }
  else if ($op == 'view' && $delta == 'post') {
    $block = array(
      'subject' => t('Post content'),
      'content' => postblock_generate_block(),
    );
    return $block;
  }
}

function postblock_generate_block() {
  $hidden_types = variable_get('postblock_hidden_types', array());
  $all_types = node_get_types('types');
  $list = array();
  
  foreach($all_types as $key => $value) {
    if (empty($hidden_types[$key]) && node_access('create', $key)) {
      $list[] = $value;
    }
  }
  if (!empty($list)) {
    return theme('postblock', $list);
  }
}

function postblock_preprocess_postblock(&$vars) {
  $vars['items'] = array();

  foreach ($vars['type_info'] as $type) {
    $item = drupal_clone($type);
    if (empty($item->type)) {
      $item->type = '';
    }
    if (empty($item->help)) {
      $item->help = '';
    }
    $item->type_class = str_replace('_', '-', $item->type);
    
    switch (variable_get('postblock_destination', 'node')) {
      case 'destination':
        $options = array('query' => drupal_get_destination());
        break;
      case 'frontpage':
        $options = array('query' => 'destination=<front>');
        break;
      default:
        $options = array();
        break;
    }
  
    $item->url = url('node/add/' . $item->type, $options);
    $item->link = l(t('Post a !typename', array('!typename' => $item->name)), 'node/add/' . $item->type, $options);
    $vars['items'][] = $item;
  }
}
